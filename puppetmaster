#!/usr/bin/env ruby

'''
==INTRODUCTION==
This script is meant to be run by munin and has to be symlinked as puppet_client.
It reports the following 4 metrics:
 * Total known clients to the puppetmaster, this can include old and retired hosts
 * The total amount of unique clients that had their configuration compiled in the last 24 hours
 * The total amount of uniquw clients that had their configuration compiled in the last 5 minutes
   * The average compilation time of those configs

Like any munin plugin, this script has 2 commandline options, config and autoconfig.

==HISTORY==
17-04-2011 - Altered the handling of the "last 5 minutes" logs. It now uses Time instead of a regex
15-04-2011 - Initial release
14-04-2011 - Time handling bugfixes
13-04-2011 - This plugin is based on another plugin on munin exchange[1] by "ohadlevy@gmail.com". 

==REQUIREMENTS==
 * Ruby(tested on 1.8.6)

==COPYRIGHT==
The original plugin did not contain any copyright information, assuming public domain.
Copyright Pieter Lexis - Kumina B.V. (pieter@kumina.nl)
This script is licenced under the GNU GPL version 3 or higher

[1] - http://exchange.munin-monitoring.org/plugins/puppetmaster/details
'''

# Parsing the logs
def phaselog
	require 'time'
	# Assuming puppetmaster logs to syslog and it does not logrotate more than once every 24 hours
	# TODO write syslog handling code to use the logs between 24 hours ago and now
	# XXX Use a syslog parser?
	logfiles = ['/var/log/syslog.1', '/var/log/syslog']

	# count5m = total amount of compiled configs/catalogs(used for 5 minute average)
	# total5m = total amount of time taken to compile(this is averaged with count
	# count_unique_24h = total amount of unique clients which had a catalog compiled in the last 24 hours
	count5m, total5m, count_unique_24h = 0, 0, 0
	
	t = Time.now
	t5min = t - (60 * 5)
	t24hour = t - (60 * 60 * 24)
	hosts = Array.new
	
	# setup regex to extract compilation times
	regexp = ".* for (.*) in (.*) seconds" 

	logfiles.each do |logfile|
		File.open(logfile).grep(/Compiled configuration|Compiled catalog/).each do |line|
			logTime = Time.parse(line[0..14])
			if logTime > t24hour # is the timestamp between now and 24h ago?
				case line
				when logTime > t5min then
					if line =~ /#{regexp}/
						avg += $2.to_f
						count5m += 1
						unless hosts.include?($1)
							hosts << $1
						end
					end

				when /#{regexp}/ then
					unless hosts.include?($1)
						hosts << $1
						count_unique_24h += 1
					end
				end
			end
		end
	end
	puts "avg_compile.value #{(avg / count5m).to_s[0..3]}" unless count5m == 0
	puts "last5m_count.value #{count5m}"
	puts "last24h_unique_count.value #{count_unique_24h}"
end

case ARGV[0]
when 'config'
	case $0
	when /puppet_clients/
		puts "graph_title puppet clients usage"
		puts "graph_vlabel clients"
		puts "known_clients.label Known Clients"
		puts "avg_compile.label Average configuration compile"
		puts "last5m_count.label Clients in the last 5 minutes"
		puts "last24h_unique_count.label unique clients in the last 24 hours"
	end
	puts "graph_category puppet"
	exit 0
when 'autoconf'
	case $0
	when /puppet_client.*/
		puts "yes"
	else
		puts "no"
		exit 0
	end
else
	if $0 =~ /puppet_client.*$/
#		puts "known_clients.value #{Dir.entries('/var/lib/puppet/yaml/facts/').size-2}"
		phaselog
	end
end

